@page "/CompanyLogIn"
@using System.Text;
@using TeamBuilder.DTOs;
@using TeamBuilderAPI.DTOs;
@using Newtonsoft.Json;

<div style="max-width: 400px; margin: 0 auto; background-color: #f5f5f5; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);">
    <h2 style="text-align: center; color: #6f42c1; font-size: 24px;">Welcome back Company Lord.</h2>
    <br />
    <br />
    <br />
    <h3 style="text-align: center; color: #6f42c1; font-size: 18px;"><b>Log In</b>:</h3>
    <br />
    <br />
    <EditForm Model="@Company" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <div style="display: flex; flex-direction: column;">
            <label for="companyName" style="color: #6f42c1; font-size: 16px;"><b>Company Name:</b></label>
            <InputText id="companyName" @bind-Value="@CompanyLogInDTO.CompanyName" style="padding: 8px; border: 2px solid #6f42c1; border-radius: 4px; margin-bottom: 10px;" />
            <ValidationMessage For="@(() => CompanyLogInDTO.CompanyName)" style="color: red; font-size: 12px;" />
        </div>
        <br />
        <div style="display: flex; flex-direction: column;">
            <label for="password" style="color: #6f42c1; font-size: 16px;"><b>Password:</b></label>
            <InputText id="lastName" @bind-Value="@CompanyLogInDTO.Password" type="password" style="padding: 8px; border: 2px solid #6f42c1; border-radius: 4px; margin-bottom: 10px;" />
            <ValidationMessage For="@(() => CompanyLogInDTO.Password)" style="color: red; font-size: 12px;" />
        </div>
        <br />
        <div style="display: flex; justify-content: center;">
            <button type="submit" style="background-color: #6f42c1; color: #fff; border: none; border-radius: 4px; padding: 8px 16px; font-size: 16px;" @onclick="HandleValidSubmit">Submit</button>
        </div>
    </EditForm>    
</div>

@code {
    [Inject] NavigationManager NavigationManager { get; set; }

    public CompanyDTO Company { get; set; }

    public CompanyLogInDTO CompanyLogInDTO { get; set; } 

    protected override async void OnInitialized()
    {
        base.OnInitialized();

        Company = new CompanyDTO();

        CompanyLogInDTO = new CompanyLogInDTO();
    }
    private async Task HandleValidSubmit()
    {
        var jsonContent = JsonConvert.SerializeObject(CompanyLogInDTO);
        var httpContent = new StringContent(jsonContent, Encoding.UTF8, "application/json");

        using var httpClient = new HttpClient();
        httpClient.BaseAddress = new Uri("https://localhost:7064");

        var response = await httpClient.PostAsync("login/Company", httpContent);


        if (response.IsSuccessStatusCode)
        {
            var company = await response.Content.ReadFromJsonAsync<CompanyDTO>();
            NavigationManager.NavigateTo($"/CompanyProfile/{company.Id}");
        }
        else/* (response.StatusCode == System.Net.HttpStatusCode.NotFound)*/
        {

        }
    }
}
